<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	<mapper namespace="com.ssafy.review.model.mapper.ReviewMapper">
		<select id="selectAllReviews" resultType="review">
			select * from reviews 
			join users
			using (user_id)
			order by reviews.created_at desc
		</select>
		
		<select id="selectMyReviews" parameterType="string" resultType="review">
			select * from reviews where user_id=#{userId}
		</select>
		
		<select id="detail" parameterType="int" resultType="review">
			select * from reviews 
			join users
			using (user_id)
			where review_id=#{reviewId}
		</select>
		
		<insert id="add" parameterType="review">
			insert into reviews (user_id, review_title ,review_content, image_path) 
			values (#{userId}, #{reviewTitle},#{reviewContent},#{imagePath})
		</insert>
		
		<delete id="delete" parameterType="int">
			delete from reviews where review_id=#{reviewId}
		</delete>
		
		<update id="update" parameterType="review">
			update reviews set review_title=#{reviewTitle}, review_content=#{reviewContent}, image_path = #{imagePath}
			where review_id=#{reviewId} and user_id=#{userId}
		</update>
		
		<select id="searchReviewsByKeyword" parameterType="string" resultType="review">
			 SELECT * FROM reviews JOIN users USING(user_id) WHERE review_title LIKE CONCAT('%', #{keyword}, '%')
		</select>
		
		<select id="findAllHits" parameterType="int" resultType="hit">
			select * from review_hits where review_id=#{reviewId}
		</select>
		
		<select id="checkLike" parameterType="hit" resultType="hit">
			select * from review_hits where review_id=#{reviewId} and user_id=#{userId}
		</select>
		
		<insert id="addHit" parameterType="hit">
			insert into review_hits (review_id, user_id)
			values (#{reviewId},#{userId})
		</insert>
		
		<update id="increaseReviewHit" parameterType="hit">
			UPDATE reviews
	        SET hit = hit + 1
	        WHERE review_id = #{reviewId}
		</update>
		
		<delete id="deleteHit" parameterType="hit">
			delete from review_hits 
			where review_id=#{reviewId} and user_id=#{userId}
		</delete>
		
		<update id="decreaseReviewHit" parameterType="hit">
			UPDATE reviews
	        SET hit = hit - 1
	        WHERE review_id = #{reviewId}
		</update>
		
		<!-- 특정 글의 모든 댓글 조회 -->
		<select id="selectComments" parameterType="int" resultType="reviewComments">
			select comment_id, review_id, user_id, user_name, content, review_comments.created_at
			from review_comments
			join users
			using(user_id)
			where review_id = #{reviewId}
			order by review_comments.created_at desc
		</select>
		
		<!-- 특정 글에 댓글 작성 -->
		<insert id="addComments" parameterType="reviewComments">
			insert into review_comments (review_id, user_id, content)
			values (#{reviewId}, #{userId}, #{content})
		</insert>
		
		<!-- 특정 댓글 수정 -->
		<update id="updateComments" parameterType="reviewComments">
			update review_comments
			set content = #{content}
			where comment_id = #{commentId}
		</update>
		
		<!-- 특정 댓글 삭제 -->
		<delete id="deleteComments">
			delete from review_comments
			where comment_id = #{commentId}
		</delete>
	</mapper>